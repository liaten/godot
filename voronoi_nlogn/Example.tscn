[gd_scene load_steps=3 format=2]

[ext_resource path="res://VisualElements.tscn" type="PackedScene" id=1]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D

var delone : Delaunay = null

var RANGE:int = 10
const SEED:int = 0

var are_visuals_hidden: bool = false
var time_now: int = 0
var time_start: int = 0

# считаем размер экрана в пикселях по каждой из осей
var screen_size_x = OS.get_screen_size().x
var screen_size_y = OS.get_screen_size().y

# придумываем начальное расстояние от края экрана, чтобы картинка
# выглядела правильно (по бокам будет океан)
var dispersion = screen_size_x * 0.05


# Вызываем, когда узел впервые появляется в дереве сцены.
func _ready():
	
	# присваиваем начальное время
	if !are_visuals_hidden:
		time_start = OS.get_ticks_msec()
	
	# присваиваем окошку ввода заданное изначально число
	get_parent().get_node(\"Visuals/LineEditRange\").text = str(RANGE)
	# создаём какую-то непонятную штуку со сложностью O(n^2)
	# TODO: переделать на сложность O(n*log(n))
	delone = Delaunay.new(
		Rect2(
			0+dispersion,
			0+dispersion,
			screen_size_x-dispersion,
			screen_size_y-dispersion))
	
	seed(SEED)
	for _i in range(RANGE):
		add_point(
			Vector2(
				rand_range(0+dispersion,screen_size_x-dispersion),
				rand_range(0+dispersion,screen_size_y-dispersion)))
	
	var triangulars: Array = delone.triangulate()
	var voronoi: Array = delone.make_voronoi(triangulars)
	for site in voronoi:
		show_site(site)
		pass
	
	# считаем время выполнения всех операций
	if !are_visuals_hidden:
		time_now = OS.get_ticks_msec()
		var time_elapsed = time_now - time_start
		get_parent().get_node(\"Visuals/Time_Elapsed\").text = \"Time elapsed:\\n\" + str(time_elapsed) + \" ms\"


func _input(event):
	if event.is_action_released(\"space_enter\"):
		regenerate()
	if event.is_action_released(\"h_pressed\"):
		if !are_visuals_hidden:
			get_tree().root.get_node(\"/root/Node2D/Visuals\").hide()
			are_visuals_hidden = true
		else:
			get_tree().root.get_node(\"/root/Node2D/Visuals\").show()
			are_visuals_hidden = false


func regenerate():
	for child in self.get_children():
		self.remove_child(child)
		child.queue_free()
	_ready()


func add_point(point: Vector2):
	show_centroid(point)
	delone.add_point(point)


func show_centroid(point: Vector2):
	var polygon = Polygon2D.new()
	var p = PoolVector2Array()
	var s = 4
	p.append(Vector2(-s,s))
	p.append(Vector2(s,s))
	p.append(Vector2(s,-s))
	p.append(Vector2(-s,-s))
	polygon.polygon = p
	polygon.color = Color.black
	polygon.position = point
	add_child(polygon)


func show_site(site: Delaunay.VoronoiSite):
	var line = Line2D.new()
	var p = site.polygon
	p.append(p[0])
	line.points = p
	line.width = 3
	line.default_color = Color.red
	add_child(line)


func change_main_range(new_text):
	var _new_range = int(new_text)
	if(_new_range > 0 && _new_range < 100000):
		RANGE = _new_range
"

[node name="Node2D" type="Node2D"]

[node name="Generator" type="Node2D" parent="."]
position = Vector2( 0, 1 )
script = SubResource( 1 )

[node name="Polygon2D" type="Polygon2D" parent="Generator"]
light_mask = 0

[node name="Visuals" parent="." instance=ExtResource( 1 )]
